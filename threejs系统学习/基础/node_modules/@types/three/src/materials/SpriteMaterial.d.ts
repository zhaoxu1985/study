import { ColorRepresentation } from "three/src/utils";
import { Color } from "three/src/math/Color";
import { Texture } from "three/src/textures/Texture";
import { MaterialParameters, Material } from "three/src/materials/Material";

export interface SpriteMaterialParameters extends MaterialParameters {
  color?: ColorRepresentation | undefined;
  map?: Texture | null | undefined;
  alphaMap?: Texture | null | undefined;
  rotation?: number | undefined;
  sizeAttenuation?: boolean | undefined;
}

export class SpriteMaterial extends Material {
  constructor(parameters?: SpriteMaterialParameters);
  /**
   * @default 'SpriteMaterial'
   */
  type: string;

  /**
   * @default new THREE.Color( 0xffffff )
   */
  color: Color;

  /**
   * @default null
   */
  map: Texture | null;

  /**
   * @default null
   */
  alphaMap: Texture | null;

  /**
   * @default 0
   */
  rotation: number;

  /**
   * @default true
   */
  sizeAttenuation: boolean;

  /**
   * @default true
   */
  transparent: boolean;

  readonly isSpriteMaterial: true;

  setValues(parameters: SpriteMaterialParameters): void;
  copy(source: SpriteMaterial): this;
}
